plugins {
  id 'java'
  id 'java-library'
  id("com.github.johnrengelman.shadow") version "8.1.1"
  id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = 'fr.dreamin'
version = '0.0.1'
description = "API for manage TabList"

repositories {
  mavenCentral()
  mavenLocal()

  maven { url "https://repo.papermc.io/repository/maven-public/"}
  maven { url "https://oss.sonatype.org/content/groups/public/"}

  maven { url "https://repo.codemc.io/repository/maven-releases/"}
  maven { url "https://repo.codemc.io/repository/maven-snapshots/"}

}

dependencies {
  compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'
  compileOnly("com.github.retrooper:packetevents-spigot:2.8.0")

  compileOnly("org.jetbrains:annotations:24.1.0")

  implementation files("libs/mctools.jar")
}

tasks {
  runServer {
    // Configure the Minecraft version for our task.
    // This is the only required configuration besides applying the plugin.
    // Your plugin's jar (or shadowJar if present) will be used automatically.
    minecraftVersion("1.21.4")
  }
}

def targetJavaVersion = 21
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }

  withSourcesJar()
  withJavadocJar()
}

tasks {
  compileJava {
    options.encoding = "UTF-8"
    options.release.set(targetJavaVersion)
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filesMatching('plugin.yml') {
    expand props
  }
}
